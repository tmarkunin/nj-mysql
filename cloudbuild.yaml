steps:
- id: Substitute Prometheus endpoint
  name: 'gcr.io/cloud-builders/curl'
  entrypoint: 'bash'
  args:
  - '-c' # pass what follows as a command to bash
  - |
    sed -i 's/testapi-service/testapi-service-$TAG_NAME/g' prometheus/prometheus.yml app.js

- id: Substitute PROJECT_ID in values.yaml
  name: 'gcr.io/cloud-builders/curl'
  entrypoint: 'bash'
  args:
  - '-c' # pass what follows as a command to bash
  - |
     sed -i 's/PROJECT_ID/$PROJECT_ID/g' testapi-chart/values.yaml

- id: Substitute TAG_NAME in values.yaml
  name: 'gcr.io/cloud-builders/curl'
  entrypoint: 'bash'
  args:
  - '-c' # pass what follows as a command to bash
  - |
     sed -i 's/TAG_NAME/$TAG_NAME/g' testapi-chart/values.yaml

# Build new Prometheus image
- id: Build Prometheus image
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-f', 'prometheus/Dockerfile','-t', 'gcr.io/$PROJECT_ID/prometheus:$TAG_NAME', 'prometheus']


# Build and test new testapi image
- id: build-test-image
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-f', 'Dockerfile-test','-t', 'gcr.io/$PROJECT_ID/testapi:$TAG_NAME.test', '.']
- id: run-tests
  name: 'gcr.io/$PROJECT_ID/testapi:$TAG_NAME.test'
  waitFor:
    - build-test-image
# Push new testapi image to the registry if the tests passed
- id: build-stage-image
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-f', 'Dockerfile','-t', 'gcr.io/$PROJECT_ID/testapi:$TAG_NAME', '.']
  waitFor:
    - run-tests
    
- id: push-stage-image
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/testapi:$TAG_NAME']


# Build helm cloudbuilder that will be used to deploy helm chart
- id: Build Helm cloudbuilder image
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-f', 'helm_builder/Dockerfile', '--tag=gcr.io/$PROJECT_ID/helm', '--build-arg', 'HELM_VERSION=v2.14.0', 'helm_builder']

- id: Deploy testapi Helm chart
  name: 'gcr.io/$PROJECT_ID/helm'
  args: ['install', './testapi-chart/', '--namespace', 'default']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=europe-north1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=test-cluster'

images: ['gcr.io/$PROJECT_ID/prometheus:$TAG_NAME','gcr.io/$PROJECT_ID/helm']
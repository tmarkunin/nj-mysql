steps:
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'sed -i "s/#testapitag#/$(Build.BuildId)/g" azure-devops/testapi-chart/*.yaml'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'sed -i "s/#tmaregistry#/$(registry)/g" azure-devops/testapi-chart/*.yaml'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'sed -i "s/#prometheustag#/$(Build.BuildId)/g" azure-devops/testapi-chart/*.yaml'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'sed -i "s/#prometheusimage#/prometheus/g" azure-devops/testapi-chart/*.yaml'
- task: Docker@2
  displayName: Build testapi image
  inputs:
    containerRegistry: 'tma-acr-connection'
    repository: 'testapi-test'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile-test'
- task: Docker@2
  displayName: Login to docker registry
  inputs:
    containerRegistry: 'tma-acr-connection'
    command: 'login'
- task: Bash@3
  displayName: Run test container to execute tests
  inputs:
    targetType: 'inline'
    script: 'docker run $(registry)/testapi-test:$(Build.BuildId)'
- task: Bash@3
  displayName: Remove test image from the registry
  inputs:
    targetType: 'inline'
    script: 'docker rmi -f $(registry)/testapi-test:$(Build.BuildId)'
- task: Docker@2
  displayName: Build and push prod image
  inputs:
    containerRegistry: 'tma-acr-connection'
    repository: 'testapi'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
- task: Docker@2
  inputs:
    containerRegistry: 'tma-acr-connection'
    repository: 'prometheus'
    command: 'buildAndPush'
    Dockerfile: 'prometheus/Dockerfile'
- task: HelmInstaller@1
  inputs:
    helmVersionToInstall: 2.13.0
- task: HelmDeploy@0
  displayName: Install Helm client (tiller should be installed)
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceConnection: 'AKS'
    command: 'init'
    upgradeTiller: false
    waitForExecution: false
    arguments: '--client-only'
- task: HelmDeploy@0
  displayName: Deploy Helm package
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceConnection: 'AKS'
    command: 'install'
    chartType: 'FilePath'
    chartPath: 'azure-devops/testapi-chart'